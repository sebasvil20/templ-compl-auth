// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.646
package page

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/sebasvil20/templ-compl-auth/internal/view/component"
	"github.com/sebasvil20/templ-compl-auth/internal/view/layout"
)

func Accounts() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<section class=\"flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\"><div class=\"card w-full bg-base-200 shadow-xl rounded-lg md:mt-0 sm:max-w-md xl:p-0\"><div class=\"p-6 space-y-4 md:space-y-6 sm:p-8\"><h1 id=\"signup-title\" class=\"text-xl font-bold leading-tight tracking-tight md:text-2xl text-center\">Create a new account</h1><h1 id=\"login-title\" class=\"hidden text-xl font-bold leading-tight tracking-tight md:text-2xl text-center\">Login into your account</h1><div role=\"alert\" class=\"alert alert-error error-message hidden\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg> <span></span></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = component.SignupForm().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = component.LoginForm().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></section>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layout.Base().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = handleFormSubmit().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<script>\n        const signupForm = document.querySelector(\"#signup-form\");\n        const loginForm = document.querySelector(\"#login-form\");\n        const loginTitle = document.querySelector(\"#login-title\");\n        const signupTitle = document.querySelector('#signup-title');\n        const errorMessage = document.querySelector(\".error-message\");\n\n        function switchForms() {\n            signupForm.classList.toggle('hidden');\n            loginForm.classList.toggle('hidden');\n\n            loginTitle.classList.toggle('hidden');\n            signupTitle.classList.toggle('hidden');\n\n            if (!errorMessage.classList.contains(\"hidden\")) {\n               errorMessage.classList.toggle(\"hidden\");\n            }\n        }\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func handleFormSubmit() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_handleFormSubmit_0606`,
		Function: `function __templ_handleFormSubmit_0606(){document.addEventListener("DOMContentLoaded", function () {
       const signinForm = document.getElementById("signup-form");
       const loginForm = document.getElementById("login-form");
       const errorMessage = document.querySelector(".error-message");

       function handleSubmit(event) {
           event.preventDefault();

           const form = event.target;
           const formData = new FormData(form);
           fetch(form.action, {
               method: form.method,
               body: formData,
           })
               .then((response) => {
                   if (response.headers.get("content-length") === "0") {
                       return { status: response.status };
                   } else {
                       return response.json().then((data) => ({
                           status: response.status,
                           data: data,
                       }));
                   }
               })
               .then((obj) => {
                   if (obj.status >= 200 && obj.status < 300) {
                       window.location.href = "/profile";
                   } else if (obj.data && obj.data.error) {
                       if (errorMessage.classList.contains("hidden")) {
                           errorMessage.classList.toggle("hidden");
                       }
                       errorMessage.childNodes[1].textContent = obj.data.error;
                   } else {
                       if (errorMessage.classList.contains("hidden")) {
                           errorMessage.classList.toggle("hidden");
                       }
                       errorMessage.childNodes[0].textContent =
                           "Server error. Please try again later.";
                   }
               })
               .catch((error) => {
                   if (errorMessage.classList.contains("hidden")) {
                       errorMessage.classList.toggle("hidden");
                   }
                   errorMessage.childNodes[0].textContent =
                       "Server error. Please try again later.";
               });
       }

       signinForm.addEventListener("submit", handleSubmit);
       loginForm.addEventListener("submit", handleSubmit);
   });
}`,
		Call:       templ.SafeScript(`__templ_handleFormSubmit_0606`),
		CallInline: templ.SafeScriptInline(`__templ_handleFormSubmit_0606`),
	}
}
