package page

import (
    "github.com/sebasvil20/templ-compl-auth/internal/view/layout"
    "github.com/sebasvil20/templ-compl-auth/internal/view/component"
)

templ Accounts() {
    @layout.Base() {
        <section class="flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0">
            <div class="card w-full bg-base-200 shadow-xl rounded-lg md:mt-0 sm:max-w-md xl:p-0">
                <div class="p-6 space-y-4 md:space-y-6 sm:p-8">
                    <h1
                        id="signup-title"
                        class="text-xl font-bold leading-tight tracking-tight md:text-2xl text-center"
                    >
                        Create a new account
                    </h1>
                    <h1
                        id="login-title"
                        class="hidden text-xl font-bold leading-tight tracking-tight md:text-2xl text-center"
                    >
                        Login into your account
                    </h1>
                    <div role="alert" class="alert alert-error error-message hidden">
                      <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>
                      <span></span>
                    </div>
                    @component.SignupForm()
                    @component.LoginForm()
                </div>
            </div>
        </section>
    }

    @handleFormSubmit()
    <script>
        const signupForm = document.querySelector("#signup-form");
        const loginForm = document.querySelector("#login-form");
        const loginTitle = document.querySelector("#login-title");
        const signupTitle = document.querySelector('#signup-title');
        const errorMessage = document.querySelector(".error-message");

        function switchForms() {
            signupForm.classList.toggle('hidden');
            loginForm.classList.toggle('hidden');

            loginTitle.classList.toggle('hidden');
            signupTitle.classList.toggle('hidden');

            if (!errorMessage.classList.contains("hidden")) {
               errorMessage.classList.toggle("hidden");
            }
        }
    </script>
}

script handleFormSubmit() {
   document.addEventListener("DOMContentLoaded", function () {
       const signinForm = document.getElementById("signup-form");
       const loginForm = document.getElementById("login-form");
       const errorMessage = document.querySelector(".error-message");

       function handleSubmit(event) {
           event.preventDefault();

           const form = event.target;
           const formData = new FormData(form);
           fetch(form.action, {
               method: form.method,
               body: formData,
           })
               .then((response) => {
                   if (response.headers.get("content-length") === "0") {
                       return { status: response.status };
                   } else {
                       return response.json().then((data) => ({
                           status: response.status,
                           data: data,
                       }));
                   }
               })
               .then((obj) => {
                   if (obj.status >= 200 && obj.status < 300) {
                       window.location.href = "/profile";
                   } else if (obj.data && obj.data.error) {
                       if (errorMessage.classList.contains("hidden")) {
                           errorMessage.classList.toggle("hidden");
                       }
                       errorMessage.childNodes[1].textContent = obj.data.error;
                   } else {
                       if (errorMessage.classList.contains("hidden")) {
                           errorMessage.classList.toggle("hidden");
                       }
                       errorMessage.childNodes[0].textContent =
                           "Server error. Please try again later.";
                   }
               })
               .catch((error) => {
                   if (errorMessage.classList.contains("hidden")) {
                       errorMessage.classList.toggle("hidden");
                   }
                   errorMessage.childNodes[0].textContent =
                       "Server error. Please try again later.";
               });
       }

       signinForm.addEventListener("submit", handleSubmit);
       loginForm.addEventListener("submit", handleSubmit);
   });
}
